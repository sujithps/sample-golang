// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"

import domain "git.thoughtworks.net/mahadeva/sample-golang/internal/domain"
import mock "github.com/stretchr/testify/mock"

// UserDbClient is an autogenerated mock type for the UserDbClient type
type UserDbClient struct {
	mock.Mock
}

// FindByID provides a mock function with given fields: ctx, userID
func (_m *UserDbClient) FindByID(ctx context.Context, userID string) (*domain.User, error) {
	ret := _m.Called(ctx, userID)

	var r0 *domain.User
	if rf, ok := ret.Get(0).(func(context.Context, string) *domain.User); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Upsert provides a mock function with given fields: ctx, userDoc
func (_m *UserDbClient) Upsert(ctx context.Context, userDoc *domain.User) error {
	ret := _m.Called(ctx, userDoc)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.User) error); ok {
		r0 = rf(ctx, userDoc)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
